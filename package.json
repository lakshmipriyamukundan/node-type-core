{
  "name": "",
  "private": true,
  "version": "0.0.1",
  "description": "backend",
  "scripts": {
    "start-once": "cross-env NODE_CONFIG_DIR=./src/config cross-env TESTING=true ts-node ./src/bin/www.ts",
    "start": "cross-env NODE_CONFIG_DIR=./src/config cross-env TESTING=true nodemon --config ./nodemon.json --exec ts-node ./src/bin/www.ts",
    "start-dist": "cd dist/src/public && yarn install && cd ../../.. && cross-env NODE_CONFIG_DIR=./dist/src/config node ./dist/src/bin/www",
    "build": "gulp build",
    "build-with-docs": "gulp build-with-docs",
    "lint-noFix": "gulp lint-noFix",
    "lint": "npm run prettier && npm run tslint",
    "test": "npm run build && npm run reset-test-db && npm run start-test-system",
    "test-with-docs": "npm run build-with-docs && npm run reset-test-db && npm run start-test-system",
    "start-test-system": "TESTING=true node tests/start-test-system.js",
    "test-core": "cross-env LOG_LEVEL=error TESTING=true NODE_APP_INSTANCE=test NODE_CONFIG_DIR=./dist/src/config jest --config=./ci-jest.config.json --forceExit --detectOpenHandles --maxWorkers=2",
    "ts-test": "npm run reset-test-db && export TESTING=true LOG_LEVEL=error && NODE_CONFIG_DIR=./src/config NODE_APP_INSTANCE=test jest --forceExit --detectOpenHandles",
    "copy-assets": "gulp copy-assets && gulp replace",
    "clean-build": "gulp clean-build",
    "compile": "tsc",
    "prettier": "prettier '{src/**/*.*,typings/**/*.*,tests/**/*.*}' --write",
    "tslint": "tslint -c tslint.json -p tsconfig.json -t stylish --fix '{src,tests}/**/*.ts'",
    "reset-test-db": "NODE_CONFIG_DIR=./src/config node tests/reset.js",
    "dev-cma": "export NODE_ENV=production && export NODE_APP_INSTANCE=beta && node bin/www.js",
    "production-staging": "export NODE_ENV=production && export NODE_APP_INSTANCE=staging && node bin/www.js",
    "production-production": "export NODE_ENV=production && export NODE_APP_INSTANCE=production && node bin/www.js"
  },
  "repository": {
    "type": "git"
  },
  "dependencies": {
    "bluebird": "^3.5.3",
    "body-parser": "^1.18.3",
    "chalk": "^2.4.1",
    "config": "^2.0.1",
    "cookie-parser": "^1.4.3",
    "cors": "^2.8.4",
    "cross-env": "^5.2.0",
    "del": "^3.0.0",
    "ejs": "^2.6.1",
    "express": "^4.16.4",
    "express-validator": "^5.3.0",
    "fancy-log": "^1.3.2",
    "glob": "^7.1.3",
    "got": "^9.3.0",
    "jszip": "2",
    "lme": "^1.5.3",
    "mkdirp": "^0.5.1",
    "morgan": "^1.9.0",
    "path": "^0.12.7",
    "read-package-json": "^2.0.13",
    "serialize-error": "^2.1.0",
    "serve-favicon": "^2.5.0",
    "swagger-jsdoc": "^1.9.7",
    "url-pattern": "^1.0.3",
    "user-home": "^2.0.0"
  },
  "devDependencies": {
    "@types/bluebird": "^3.5.24",
    "@types/body-parser": "^1.17.0",
    "@types/config": "^0.0.34",
    "@types/cookie-parser": "^1.4.1",
    "@types/cors": "^2.8.4",
    "@types/del": "^3.0.1",
    "@types/ejs": "^2.6.0",
    "@types/express": "^4.16.0",
    "@types/fancy-log": "^1.3.0",
    "@types/got": "^9.2.0",
    "@types/gulp": "^4.0.5",
    "@types/gulp-rename": "^0.0.33",
    "@types/gulp-replace": "^0.0.31",
    "@types/html-minifier": "^3.5.2",
    "@types/jest": "^23.3.9",
    "@types/jszip": "^3.1.4",
    "@types/mkdirp": "^0.5.2",
    "@types/morgan": "^1.7.35",
    "@types/node": "^10.12.2",
    "@types/run-sequence": "^0.0.30",
    "@types/serialize-error": "^2.1.0",
    "@types/serve-favicon": "^2.2.30",
    "@types/user-home": "2.0.0",
    "del": "^3.0.0",
    "git-last-commit": "^0.3.0",
    "gulp": "^3.9.1",
    "gulp-cli": "^2.0.1",
    "gulp-exec": "^3.0.2",
    "gulp-markdown": "^3.0.0",
    "gulp-prettier-plugin": "^1.3.0",
    "gulp-rename": "^1.4.0",
    "gulp-replace": "^1.0.0",
    "gulp-tslint": "^8.1.3",
    "gulp-typescript": "^5.0.0-alpha.3",
    "html-minifier": "^3.5.21",
    "jest": "^23.6.0",
    "markdown-table": "^1.1.2",
    "nodemon": "^1.18.5",
    "prettier": "^1.14.3",
    "run-sequence": "^2.2.1",
    "ts-jest": "^23.10.4",
    "ts-node": "^7.0.1",
    "tslint": "^5.11.0",
    "typescript": "^3.1.4"
  },
  "jest": {
    "globals": {
      "ts-jest": {
        "tsConfigFile": "tsconfig.json"
      }
    },
    "moduleFileExtensions": [
      "ts",
      "js"
    ],
    "transform": {
      "^.+\\.(ts)$": "ts-jest"
    },
    "testMatch": [
      "**/tests/**/*.spec.{ts,js}"
    ],
    "testEnvironment": "node"
  }
}
